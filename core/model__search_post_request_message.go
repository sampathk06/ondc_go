/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchPostRequestMessage struct for SearchPostRequestMessage
type SearchPostRequestMessage struct {
	Intent *Intent `json:"intent,omitempty"`
}

// NewSearchPostRequestMessage instantiates a new SearchPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchPostRequestMessage() *SearchPostRequestMessage {
	this := SearchPostRequestMessage{}
	return &this
}

// NewSearchPostRequestMessageWithDefaults instantiates a new SearchPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchPostRequestMessageWithDefaults() *SearchPostRequestMessage {
	this := SearchPostRequestMessage{}
	return &this
}

// GetIntent returns the Intent field value if set, zero value otherwise.
func (o *SearchPostRequestMessage) GetIntent() Intent {
	if o == nil || isNil(o.Intent) {
		var ret Intent
		return ret
	}
	return *o.Intent
}

// GetIntentOk returns a tuple with the Intent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchPostRequestMessage) GetIntentOk() (*Intent, bool) {
	if o == nil || isNil(o.Intent) {
    return nil, false
	}
	return o.Intent, true
}

// HasIntent returns a boolean if a field has been set.
func (o *SearchPostRequestMessage) HasIntent() bool {
	if o != nil && !isNil(o.Intent) {
		return true
	}

	return false
}

// SetIntent gets a reference to the given Intent and assigns it to the Intent field.
func (o *SearchPostRequestMessage) SetIntent(v Intent) {
	o.Intent = &v
}

func (o SearchPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Intent) {
		toSerialize["intent"] = o.Intent
	}
	return json.Marshal(toSerialize)
}

type NullableSearchPostRequestMessage struct {
	value *SearchPostRequestMessage
	isSet bool
}

func (v NullableSearchPostRequestMessage) Get() *SearchPostRequestMessage {
	return v.value
}

func (v *NullableSearchPostRequestMessage) Set(val *SearchPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchPostRequestMessage(val *SearchPostRequestMessage) *NullableSearchPostRequestMessage {
	return &NullableSearchPostRequestMessage{value: val, isSet: true}
}

func (v NullableSearchPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


