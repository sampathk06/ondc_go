/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProviderLocationsInner struct for ProviderLocationsInner
type ProviderLocationsInner struct {
	Id *string `json:"id,omitempty"`
	Descriptor *Descriptor `json:"descriptor,omitempty"`
	// Describes a gps coordinate
	Gps *string `json:"gps,omitempty"`
	Address *Address `json:"address,omitempty"`
	StationCode *string `json:"station_code,omitempty"`
	City *City `json:"city,omitempty"`
	Country *Country `json:"country,omitempty"`
	Circle *Circle `json:"circle,omitempty"`
	Polygon *string `json:"polygon,omitempty"`
	Var3dspace *string `json:"3dspace,omitempty"`
	Time *Time `json:"time,omitempty"`
	// If the entity can be rated or not
	Rateable *bool `json:"rateable,omitempty"`
}

// NewProviderLocationsInner instantiates a new ProviderLocationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderLocationsInner() *ProviderLocationsInner {
	this := ProviderLocationsInner{}
	return &this
}

// NewProviderLocationsInnerWithDefaults instantiates a new ProviderLocationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderLocationsInnerWithDefaults() *ProviderLocationsInner {
	this := ProviderLocationsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProviderLocationsInner) SetId(v string) {
	o.Id = &v
}

// GetDescriptor returns the Descriptor field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetDescriptor() Descriptor {
	if o == nil || isNil(o.Descriptor) {
		var ret Descriptor
		return ret
	}
	return *o.Descriptor
}

// GetDescriptorOk returns a tuple with the Descriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetDescriptorOk() (*Descriptor, bool) {
	if o == nil || isNil(o.Descriptor) {
    return nil, false
	}
	return o.Descriptor, true
}

// HasDescriptor returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasDescriptor() bool {
	if o != nil && !isNil(o.Descriptor) {
		return true
	}

	return false
}

// SetDescriptor gets a reference to the given Descriptor and assigns it to the Descriptor field.
func (o *ProviderLocationsInner) SetDescriptor(v Descriptor) {
	o.Descriptor = &v
}

// GetGps returns the Gps field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetGps() string {
	if o == nil || isNil(o.Gps) {
		var ret string
		return ret
	}
	return *o.Gps
}

// GetGpsOk returns a tuple with the Gps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetGpsOk() (*string, bool) {
	if o == nil || isNil(o.Gps) {
    return nil, false
	}
	return o.Gps, true
}

// HasGps returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasGps() bool {
	if o != nil && !isNil(o.Gps) {
		return true
	}

	return false
}

// SetGps gets a reference to the given string and assigns it to the Gps field.
func (o *ProviderLocationsInner) SetGps(v string) {
	o.Gps = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetAddress() Address {
	if o == nil || isNil(o.Address) {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetAddressOk() (*Address, bool) {
	if o == nil || isNil(o.Address) {
    return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *ProviderLocationsInner) SetAddress(v Address) {
	o.Address = &v
}

// GetStationCode returns the StationCode field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetStationCode() string {
	if o == nil || isNil(o.StationCode) {
		var ret string
		return ret
	}
	return *o.StationCode
}

// GetStationCodeOk returns a tuple with the StationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetStationCodeOk() (*string, bool) {
	if o == nil || isNil(o.StationCode) {
    return nil, false
	}
	return o.StationCode, true
}

// HasStationCode returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasStationCode() bool {
	if o != nil && !isNil(o.StationCode) {
		return true
	}

	return false
}

// SetStationCode gets a reference to the given string and assigns it to the StationCode field.
func (o *ProviderLocationsInner) SetStationCode(v string) {
	o.StationCode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetCity() City {
	if o == nil || isNil(o.City) {
		var ret City
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetCityOk() (*City, bool) {
	if o == nil || isNil(o.City) {
    return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasCity() bool {
	if o != nil && !isNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given City and assigns it to the City field.
func (o *ProviderLocationsInner) SetCity(v City) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetCountry() Country {
	if o == nil || isNil(o.Country) {
		var ret Country
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetCountryOk() (*Country, bool) {
	if o == nil || isNil(o.Country) {
    return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasCountry() bool {
	if o != nil && !isNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given Country and assigns it to the Country field.
func (o *ProviderLocationsInner) SetCountry(v Country) {
	o.Country = &v
}

// GetCircle returns the Circle field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetCircle() Circle {
	if o == nil || isNil(o.Circle) {
		var ret Circle
		return ret
	}
	return *o.Circle
}

// GetCircleOk returns a tuple with the Circle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetCircleOk() (*Circle, bool) {
	if o == nil || isNil(o.Circle) {
    return nil, false
	}
	return o.Circle, true
}

// HasCircle returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasCircle() bool {
	if o != nil && !isNil(o.Circle) {
		return true
	}

	return false
}

// SetCircle gets a reference to the given Circle and assigns it to the Circle field.
func (o *ProviderLocationsInner) SetCircle(v Circle) {
	o.Circle = &v
}

// GetPolygon returns the Polygon field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetPolygon() string {
	if o == nil || isNil(o.Polygon) {
		var ret string
		return ret
	}
	return *o.Polygon
}

// GetPolygonOk returns a tuple with the Polygon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetPolygonOk() (*string, bool) {
	if o == nil || isNil(o.Polygon) {
    return nil, false
	}
	return o.Polygon, true
}

// HasPolygon returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasPolygon() bool {
	if o != nil && !isNil(o.Polygon) {
		return true
	}

	return false
}

// SetPolygon gets a reference to the given string and assigns it to the Polygon field.
func (o *ProviderLocationsInner) SetPolygon(v string) {
	o.Polygon = &v
}

// GetVar3dspace returns the Var3dspace field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetVar3dspace() string {
	if o == nil || isNil(o.Var3dspace) {
		var ret string
		return ret
	}
	return *o.Var3dspace
}

// GetVar3dspaceOk returns a tuple with the Var3dspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetVar3dspaceOk() (*string, bool) {
	if o == nil || isNil(o.Var3dspace) {
    return nil, false
	}
	return o.Var3dspace, true
}

// HasVar3dspace returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasVar3dspace() bool {
	if o != nil && !isNil(o.Var3dspace) {
		return true
	}

	return false
}

// SetVar3dspace gets a reference to the given string and assigns it to the Var3dspace field.
func (o *ProviderLocationsInner) SetVar3dspace(v string) {
	o.Var3dspace = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetTime() Time {
	if o == nil || isNil(o.Time) {
		var ret Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetTimeOk() (*Time, bool) {
	if o == nil || isNil(o.Time) {
    return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasTime() bool {
	if o != nil && !isNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given Time and assigns it to the Time field.
func (o *ProviderLocationsInner) SetTime(v Time) {
	o.Time = &v
}

// GetRateable returns the Rateable field value if set, zero value otherwise.
func (o *ProviderLocationsInner) GetRateable() bool {
	if o == nil || isNil(o.Rateable) {
		var ret bool
		return ret
	}
	return *o.Rateable
}

// GetRateableOk returns a tuple with the Rateable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderLocationsInner) GetRateableOk() (*bool, bool) {
	if o == nil || isNil(o.Rateable) {
    return nil, false
	}
	return o.Rateable, true
}

// HasRateable returns a boolean if a field has been set.
func (o *ProviderLocationsInner) HasRateable() bool {
	if o != nil && !isNil(o.Rateable) {
		return true
	}

	return false
}

// SetRateable gets a reference to the given bool and assigns it to the Rateable field.
func (o *ProviderLocationsInner) SetRateable(v bool) {
	o.Rateable = &v
}

func (o ProviderLocationsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Descriptor) {
		toSerialize["descriptor"] = o.Descriptor
	}
	if !isNil(o.Gps) {
		toSerialize["gps"] = o.Gps
	}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !isNil(o.StationCode) {
		toSerialize["station_code"] = o.StationCode
	}
	if !isNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !isNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.Circle) {
		toSerialize["circle"] = o.Circle
	}
	if !isNil(o.Polygon) {
		toSerialize["polygon"] = o.Polygon
	}
	if !isNil(o.Var3dspace) {
		toSerialize["3dspace"] = o.Var3dspace
	}
	if !isNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !isNil(o.Rateable) {
		toSerialize["rateable"] = o.Rateable
	}
	return json.Marshal(toSerialize)
}

type NullableProviderLocationsInner struct {
	value *ProviderLocationsInner
	isSet bool
}

func (v NullableProviderLocationsInner) Get() *ProviderLocationsInner {
	return v.value
}

func (v *NullableProviderLocationsInner) Set(val *ProviderLocationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderLocationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderLocationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderLocationsInner(val *ProviderLocationsInner) *NullableProviderLocationsInner {
	return &NullableProviderLocationsInner{value: val, isSet: true}
}

func (v NullableProviderLocationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderLocationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


