/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OnInitPostRequestMessageOrderProvider struct for OnInitPostRequestMessageOrderProvider
type OnInitPostRequestMessageOrderProvider struct {
	Id *Id `json:"id,omitempty"`
}

// NewOnInitPostRequestMessageOrderProvider instantiates a new OnInitPostRequestMessageOrderProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnInitPostRequestMessageOrderProvider() *OnInitPostRequestMessageOrderProvider {
	this := OnInitPostRequestMessageOrderProvider{}
	return &this
}

// NewOnInitPostRequestMessageOrderProviderWithDefaults instantiates a new OnInitPostRequestMessageOrderProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnInitPostRequestMessageOrderProviderWithDefaults() *OnInitPostRequestMessageOrderProvider {
	this := OnInitPostRequestMessageOrderProvider{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OnInitPostRequestMessageOrderProvider) GetId() Id {
	if o == nil || isNil(o.Id) {
		var ret Id
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnInitPostRequestMessageOrderProvider) GetIdOk() (*Id, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OnInitPostRequestMessageOrderProvider) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given Id and assigns it to the Id field.
func (o *OnInitPostRequestMessageOrderProvider) SetId(v Id) {
	o.Id = &v
}

func (o OnInitPostRequestMessageOrderProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableOnInitPostRequestMessageOrderProvider struct {
	value *OnInitPostRequestMessageOrderProvider
	isSet bool
}

func (v NullableOnInitPostRequestMessageOrderProvider) Get() *OnInitPostRequestMessageOrderProvider {
	return v.value
}

func (v *NullableOnInitPostRequestMessageOrderProvider) Set(val *OnInitPostRequestMessageOrderProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableOnInitPostRequestMessageOrderProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableOnInitPostRequestMessageOrderProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnInitPostRequestMessageOrderProvider(val *OnInitPostRequestMessageOrderProvider) *NullableOnInitPostRequestMessageOrderProvider {
	return &NullableOnInitPostRequestMessageOrderProvider{value: val, isSet: true}
}

func (v NullableOnInitPostRequestMessageOrderProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnInitPostRequestMessageOrderProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


