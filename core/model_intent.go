/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Intent Intent of a user. Used for searching for services
type Intent struct {
	Descriptor *Descriptor `json:"descriptor,omitempty"`
	Provider *Provider `json:"provider,omitempty"`
	Fulfillment *Fulfillment `json:"fulfillment,omitempty"`
	Payment *Payment `json:"payment,omitempty"`
	Category *Category `json:"category,omitempty"`
	Offer *Offer `json:"offer,omitempty"`
	Item *Item `json:"item,omitempty"`
	// Describes a tag. This is a simple key-value store which is used to contain extended metadata
	Tags *map[string]string `json:"tags,omitempty"`
}

// NewIntent instantiates a new Intent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntent() *Intent {
	this := Intent{}
	return &this
}

// NewIntentWithDefaults instantiates a new Intent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntentWithDefaults() *Intent {
	this := Intent{}
	return &this
}

// GetDescriptor returns the Descriptor field value if set, zero value otherwise.
func (o *Intent) GetDescriptor() Descriptor {
	if o == nil || isNil(o.Descriptor) {
		var ret Descriptor
		return ret
	}
	return *o.Descriptor
}

// GetDescriptorOk returns a tuple with the Descriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetDescriptorOk() (*Descriptor, bool) {
	if o == nil || isNil(o.Descriptor) {
    return nil, false
	}
	return o.Descriptor, true
}

// HasDescriptor returns a boolean if a field has been set.
func (o *Intent) HasDescriptor() bool {
	if o != nil && !isNil(o.Descriptor) {
		return true
	}

	return false
}

// SetDescriptor gets a reference to the given Descriptor and assigns it to the Descriptor field.
func (o *Intent) SetDescriptor(v Descriptor) {
	o.Descriptor = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *Intent) GetProvider() Provider {
	if o == nil || isNil(o.Provider) {
		var ret Provider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetProviderOk() (*Provider, bool) {
	if o == nil || isNil(o.Provider) {
    return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *Intent) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given Provider and assigns it to the Provider field.
func (o *Intent) SetProvider(v Provider) {
	o.Provider = &v
}

// GetFulfillment returns the Fulfillment field value if set, zero value otherwise.
func (o *Intent) GetFulfillment() Fulfillment {
	if o == nil || isNil(o.Fulfillment) {
		var ret Fulfillment
		return ret
	}
	return *o.Fulfillment
}

// GetFulfillmentOk returns a tuple with the Fulfillment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetFulfillmentOk() (*Fulfillment, bool) {
	if o == nil || isNil(o.Fulfillment) {
    return nil, false
	}
	return o.Fulfillment, true
}

// HasFulfillment returns a boolean if a field has been set.
func (o *Intent) HasFulfillment() bool {
	if o != nil && !isNil(o.Fulfillment) {
		return true
	}

	return false
}

// SetFulfillment gets a reference to the given Fulfillment and assigns it to the Fulfillment field.
func (o *Intent) SetFulfillment(v Fulfillment) {
	o.Fulfillment = &v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *Intent) GetPayment() Payment {
	if o == nil || isNil(o.Payment) {
		var ret Payment
		return ret
	}
	return *o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetPaymentOk() (*Payment, bool) {
	if o == nil || isNil(o.Payment) {
    return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *Intent) HasPayment() bool {
	if o != nil && !isNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given Payment and assigns it to the Payment field.
func (o *Intent) SetPayment(v Payment) {
	o.Payment = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *Intent) GetCategory() Category {
	if o == nil || isNil(o.Category) {
		var ret Category
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetCategoryOk() (*Category, bool) {
	if o == nil || isNil(o.Category) {
    return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *Intent) HasCategory() bool {
	if o != nil && !isNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given Category and assigns it to the Category field.
func (o *Intent) SetCategory(v Category) {
	o.Category = &v
}

// GetOffer returns the Offer field value if set, zero value otherwise.
func (o *Intent) GetOffer() Offer {
	if o == nil || isNil(o.Offer) {
		var ret Offer
		return ret
	}
	return *o.Offer
}

// GetOfferOk returns a tuple with the Offer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetOfferOk() (*Offer, bool) {
	if o == nil || isNil(o.Offer) {
    return nil, false
	}
	return o.Offer, true
}

// HasOffer returns a boolean if a field has been set.
func (o *Intent) HasOffer() bool {
	if o != nil && !isNil(o.Offer) {
		return true
	}

	return false
}

// SetOffer gets a reference to the given Offer and assigns it to the Offer field.
func (o *Intent) SetOffer(v Offer) {
	o.Offer = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *Intent) GetItem() Item {
	if o == nil || isNil(o.Item) {
		var ret Item
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetItemOk() (*Item, bool) {
	if o == nil || isNil(o.Item) {
    return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *Intent) HasItem() bool {
	if o != nil && !isNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given Item and assigns it to the Item field.
func (o *Intent) SetItem(v Item) {
	o.Item = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Intent) GetTags() map[string]string {
	if o == nil || isNil(o.Tags) {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetTagsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Intent) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *Intent) SetTags(v map[string]string) {
	o.Tags = &v
}

func (o Intent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Descriptor) {
		toSerialize["descriptor"] = o.Descriptor
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !isNil(o.Fulfillment) {
		toSerialize["fulfillment"] = o.Fulfillment
	}
	if !isNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	if !isNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !isNil(o.Offer) {
		toSerialize["offer"] = o.Offer
	}
	if !isNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableIntent struct {
	value *Intent
	isSet bool
}

func (v NullableIntent) Get() *Intent {
	return v.value
}

func (v *NullableIntent) Set(val *Intent) {
	v.value = val
	v.isSet = true
}

func (v NullableIntent) IsSet() bool {
	return v.isSet
}

func (v *NullableIntent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntent(val *Intent) *NullableIntent {
	return &NullableIntent{value: val, isSet: true}
}

func (v NullableIntent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


