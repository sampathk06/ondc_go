/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OnInitPostRequestMessageOrderOffersInner struct for OnInitPostRequestMessageOrderOffersInner
type OnInitPostRequestMessageOrderOffersInner struct {
	Id *Id `json:"id,omitempty"`
}

// NewOnInitPostRequestMessageOrderOffersInner instantiates a new OnInitPostRequestMessageOrderOffersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnInitPostRequestMessageOrderOffersInner() *OnInitPostRequestMessageOrderOffersInner {
	this := OnInitPostRequestMessageOrderOffersInner{}
	return &this
}

// NewOnInitPostRequestMessageOrderOffersInnerWithDefaults instantiates a new OnInitPostRequestMessageOrderOffersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnInitPostRequestMessageOrderOffersInnerWithDefaults() *OnInitPostRequestMessageOrderOffersInner {
	this := OnInitPostRequestMessageOrderOffersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OnInitPostRequestMessageOrderOffersInner) GetId() Id {
	if o == nil || isNil(o.Id) {
		var ret Id
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnInitPostRequestMessageOrderOffersInner) GetIdOk() (*Id, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OnInitPostRequestMessageOrderOffersInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given Id and assigns it to the Id field.
func (o *OnInitPostRequestMessageOrderOffersInner) SetId(v Id) {
	o.Id = &v
}

func (o OnInitPostRequestMessageOrderOffersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableOnInitPostRequestMessageOrderOffersInner struct {
	value *OnInitPostRequestMessageOrderOffersInner
	isSet bool
}

func (v NullableOnInitPostRequestMessageOrderOffersInner) Get() *OnInitPostRequestMessageOrderOffersInner {
	return v.value
}

func (v *NullableOnInitPostRequestMessageOrderOffersInner) Set(val *OnInitPostRequestMessageOrderOffersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOnInitPostRequestMessageOrderOffersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOnInitPostRequestMessageOrderOffersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnInitPostRequestMessageOrderOffersInner(val *OnInitPostRequestMessageOrderOffersInner) *NullableOnInitPostRequestMessageOrderOffersInner {
	return &NullableOnInitPostRequestMessageOrderOffersInner{value: val, isSet: true}
}

func (v NullableOnInitPostRequestMessageOrderOffersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnInitPostRequestMessageOrderOffersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


