/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Fulfillment Describes how a single product/service will be rendered/fulfilled to the end customer
type Fulfillment struct {
	// Unique reference ID to the fulfillment of an order
	Id *string `json:"id,omitempty"`
	// This describes the type of fulfillment
	Type *string `json:"type,omitempty"`
	ProviderId *Id `json:"provider_id,omitempty"`
	Rating *Value `json:"rating,omitempty"`
	State *State `json:"state,omitempty"`
	// Indicates whether the fulfillment allows tracking
	Tracking *bool `json:"tracking,omitempty"`
	Customer *FulfillmentCustomer `json:"customer,omitempty"`
	Agent *Agent `json:"agent,omitempty"`
	Person *Person `json:"person,omitempty"`
	Contact *Contact `json:"contact,omitempty"`
	Vehicle *Vehicle `json:"vehicle,omitempty"`
	Start *FulfillmentStart `json:"start,omitempty"`
	End *FulfillmentEnd `json:"end,omitempty"`
	// If the entity can be rated or not
	Rateable *bool `json:"rateable,omitempty"`
	// Describes a tag. This is a simple key-value store which is used to contain extended metadata
	Tags *map[string]string `json:"tags,omitempty"`
}

// NewFulfillment instantiates a new Fulfillment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFulfillment() *Fulfillment {
	this := Fulfillment{}
	var tracking bool = false
	this.Tracking = &tracking
	return &this
}

// NewFulfillmentWithDefaults instantiates a new Fulfillment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFulfillmentWithDefaults() *Fulfillment {
	this := Fulfillment{}
	var tracking bool = false
	this.Tracking = &tracking
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Fulfillment) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Fulfillment) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Fulfillment) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Fulfillment) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Fulfillment) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Fulfillment) SetType(v string) {
	o.Type = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *Fulfillment) GetProviderId() Id {
	if o == nil || isNil(o.ProviderId) {
		var ret Id
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetProviderIdOk() (*Id, bool) {
	if o == nil || isNil(o.ProviderId) {
    return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *Fulfillment) HasProviderId() bool {
	if o != nil && !isNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given Id and assigns it to the ProviderId field.
func (o *Fulfillment) SetProviderId(v Id) {
	o.ProviderId = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *Fulfillment) GetRating() Value {
	if o == nil || isNil(o.Rating) {
		var ret Value
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetRatingOk() (*Value, bool) {
	if o == nil || isNil(o.Rating) {
    return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *Fulfillment) HasRating() bool {
	if o != nil && !isNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given Value and assigns it to the Rating field.
func (o *Fulfillment) SetRating(v Value) {
	o.Rating = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Fulfillment) GetState() State {
	if o == nil || isNil(o.State) {
		var ret State
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetStateOk() (*State, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Fulfillment) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given State and assigns it to the State field.
func (o *Fulfillment) SetState(v State) {
	o.State = &v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *Fulfillment) GetTracking() bool {
	if o == nil || isNil(o.Tracking) {
		var ret bool
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetTrackingOk() (*bool, bool) {
	if o == nil || isNil(o.Tracking) {
    return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *Fulfillment) HasTracking() bool {
	if o != nil && !isNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given bool and assigns it to the Tracking field.
func (o *Fulfillment) SetTracking(v bool) {
	o.Tracking = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *Fulfillment) GetCustomer() FulfillmentCustomer {
	if o == nil || isNil(o.Customer) {
		var ret FulfillmentCustomer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetCustomerOk() (*FulfillmentCustomer, bool) {
	if o == nil || isNil(o.Customer) {
    return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *Fulfillment) HasCustomer() bool {
	if o != nil && !isNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given FulfillmentCustomer and assigns it to the Customer field.
func (o *Fulfillment) SetCustomer(v FulfillmentCustomer) {
	o.Customer = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *Fulfillment) GetAgent() Agent {
	if o == nil || isNil(o.Agent) {
		var ret Agent
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetAgentOk() (*Agent, bool) {
	if o == nil || isNil(o.Agent) {
    return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *Fulfillment) HasAgent() bool {
	if o != nil && !isNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given Agent and assigns it to the Agent field.
func (o *Fulfillment) SetAgent(v Agent) {
	o.Agent = &v
}

// GetPerson returns the Person field value if set, zero value otherwise.
func (o *Fulfillment) GetPerson() Person {
	if o == nil || isNil(o.Person) {
		var ret Person
		return ret
	}
	return *o.Person
}

// GetPersonOk returns a tuple with the Person field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetPersonOk() (*Person, bool) {
	if o == nil || isNil(o.Person) {
    return nil, false
	}
	return o.Person, true
}

// HasPerson returns a boolean if a field has been set.
func (o *Fulfillment) HasPerson() bool {
	if o != nil && !isNil(o.Person) {
		return true
	}

	return false
}

// SetPerson gets a reference to the given Person and assigns it to the Person field.
func (o *Fulfillment) SetPerson(v Person) {
	o.Person = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *Fulfillment) GetContact() Contact {
	if o == nil || isNil(o.Contact) {
		var ret Contact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetContactOk() (*Contact, bool) {
	if o == nil || isNil(o.Contact) {
    return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *Fulfillment) HasContact() bool {
	if o != nil && !isNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given Contact and assigns it to the Contact field.
func (o *Fulfillment) SetContact(v Contact) {
	o.Contact = &v
}

// GetVehicle returns the Vehicle field value if set, zero value otherwise.
func (o *Fulfillment) GetVehicle() Vehicle {
	if o == nil || isNil(o.Vehicle) {
		var ret Vehicle
		return ret
	}
	return *o.Vehicle
}

// GetVehicleOk returns a tuple with the Vehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetVehicleOk() (*Vehicle, bool) {
	if o == nil || isNil(o.Vehicle) {
    return nil, false
	}
	return o.Vehicle, true
}

// HasVehicle returns a boolean if a field has been set.
func (o *Fulfillment) HasVehicle() bool {
	if o != nil && !isNil(o.Vehicle) {
		return true
	}

	return false
}

// SetVehicle gets a reference to the given Vehicle and assigns it to the Vehicle field.
func (o *Fulfillment) SetVehicle(v Vehicle) {
	o.Vehicle = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *Fulfillment) GetStart() FulfillmentStart {
	if o == nil || isNil(o.Start) {
		var ret FulfillmentStart
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetStartOk() (*FulfillmentStart, bool) {
	if o == nil || isNil(o.Start) {
    return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *Fulfillment) HasStart() bool {
	if o != nil && !isNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given FulfillmentStart and assigns it to the Start field.
func (o *Fulfillment) SetStart(v FulfillmentStart) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *Fulfillment) GetEnd() FulfillmentEnd {
	if o == nil || isNil(o.End) {
		var ret FulfillmentEnd
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetEndOk() (*FulfillmentEnd, bool) {
	if o == nil || isNil(o.End) {
    return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *Fulfillment) HasEnd() bool {
	if o != nil && !isNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given FulfillmentEnd and assigns it to the End field.
func (o *Fulfillment) SetEnd(v FulfillmentEnd) {
	o.End = &v
}

// GetRateable returns the Rateable field value if set, zero value otherwise.
func (o *Fulfillment) GetRateable() bool {
	if o == nil || isNil(o.Rateable) {
		var ret bool
		return ret
	}
	return *o.Rateable
}

// GetRateableOk returns a tuple with the Rateable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetRateableOk() (*bool, bool) {
	if o == nil || isNil(o.Rateable) {
    return nil, false
	}
	return o.Rateable, true
}

// HasRateable returns a boolean if a field has been set.
func (o *Fulfillment) HasRateable() bool {
	if o != nil && !isNil(o.Rateable) {
		return true
	}

	return false
}

// SetRateable gets a reference to the given bool and assigns it to the Rateable field.
func (o *Fulfillment) SetRateable(v bool) {
	o.Rateable = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Fulfillment) GetTags() map[string]string {
	if o == nil || isNil(o.Tags) {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment) GetTagsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Fulfillment) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *Fulfillment) SetTags(v map[string]string) {
	o.Tags = &v
}

func (o Fulfillment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.ProviderId) {
		toSerialize["provider_id"] = o.ProviderId
	}
	if !isNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !isNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !isNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	if !isNil(o.Person) {
		toSerialize["person"] = o.Person
	}
	if !isNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !isNil(o.Vehicle) {
		toSerialize["vehicle"] = o.Vehicle
	}
	if !isNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !isNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !isNil(o.Rateable) {
		toSerialize["rateable"] = o.Rateable
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFulfillment struct {
	value *Fulfillment
	isSet bool
}

func (v NullableFulfillment) Get() *Fulfillment {
	return v.value
}

func (v *NullableFulfillment) Set(val *Fulfillment) {
	v.value = val
	v.isSet = true
}

func (v NullableFulfillment) IsSet() bool {
	return v.isSet
}

func (v *NullableFulfillment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFulfillment(val *Fulfillment) *NullableFulfillment {
	return &NullableFulfillment{value: val, isSet: true}
}

func (v NullableFulfillment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFulfillment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


