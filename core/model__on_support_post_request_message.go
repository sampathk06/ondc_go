/*
ONDC Protocol Core API

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OnSupportPostRequestMessage struct for OnSupportPostRequestMessage
type OnSupportPostRequestMessage struct {
	Phone *string `json:"phone,omitempty"`
	Email *string `json:"email,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewOnSupportPostRequestMessage instantiates a new OnSupportPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnSupportPostRequestMessage() *OnSupportPostRequestMessage {
	this := OnSupportPostRequestMessage{}
	return &this
}

// NewOnSupportPostRequestMessageWithDefaults instantiates a new OnSupportPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnSupportPostRequestMessageWithDefaults() *OnSupportPostRequestMessage {
	this := OnSupportPostRequestMessage{}
	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *OnSupportPostRequestMessage) GetPhone() string {
	if o == nil || isNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnSupportPostRequestMessage) GetPhoneOk() (*string, bool) {
	if o == nil || isNil(o.Phone) {
    return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *OnSupportPostRequestMessage) HasPhone() bool {
	if o != nil && !isNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *OnSupportPostRequestMessage) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OnSupportPostRequestMessage) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnSupportPostRequestMessage) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OnSupportPostRequestMessage) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OnSupportPostRequestMessage) SetEmail(v string) {
	o.Email = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *OnSupportPostRequestMessage) GetUri() string {
	if o == nil || isNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnSupportPostRequestMessage) GetUriOk() (*string, bool) {
	if o == nil || isNil(o.Uri) {
    return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *OnSupportPostRequestMessage) HasUri() bool {
	if o != nil && !isNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *OnSupportPostRequestMessage) SetUri(v string) {
	o.Uri = &v
}

func (o OnSupportPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableOnSupportPostRequestMessage struct {
	value *OnSupportPostRequestMessage
	isSet bool
}

func (v NullableOnSupportPostRequestMessage) Get() *OnSupportPostRequestMessage {
	return v.value
}

func (v *NullableOnSupportPostRequestMessage) Set(val *OnSupportPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableOnSupportPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableOnSupportPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnSupportPostRequestMessage(val *OnSupportPostRequestMessage) *NullableOnSupportPostRequestMessage {
	return &NullableOnSupportPostRequestMessage{value: val, isSet: true}
}

func (v NullableOnSupportPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnSupportPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


