/*
ONDC Protocol API for retail (grocery, f&b)

ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SelectPostRequestMessage struct for SelectPostRequestMessage
type SelectPostRequestMessage struct {
	Order Order `json:"order"`
}

// NewSelectPostRequestMessage instantiates a new SelectPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectPostRequestMessage(order Order) *SelectPostRequestMessage {
	this := SelectPostRequestMessage{}
	this.Order = order
	return &this
}

// NewSelectPostRequestMessageWithDefaults instantiates a new SelectPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectPostRequestMessageWithDefaults() *SelectPostRequestMessage {
	this := SelectPostRequestMessage{}
	return &this
}

// GetOrder returns the Order field value
func (o *SelectPostRequestMessage) GetOrder() Order {
	if o == nil {
		var ret Order
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *SelectPostRequestMessage) GetOrderOk() (*Order, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *SelectPostRequestMessage) SetOrder(v Order) {
	o.Order = v
}

func (o SelectPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullableSelectPostRequestMessage struct {
	value *SelectPostRequestMessage
	isSet bool
}

func (v NullableSelectPostRequestMessage) Get() *SelectPostRequestMessage {
	return v.value
}

func (v *NullableSelectPostRequestMessage) Set(val *SelectPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectPostRequestMessage(val *SelectPostRequestMessage) *NullableSelectPostRequestMessage {
	return &NullableSelectPostRequestMessage{value: val, isSet: true}
}

func (v NullableSelectPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


