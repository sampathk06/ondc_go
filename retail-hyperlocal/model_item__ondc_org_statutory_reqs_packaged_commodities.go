/*
ONDC Protocol API for retail (grocery, f&b)

ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ItemOndcOrgStatutoryReqsPackagedCommodities mandatory for category_id \"Packaged Commodities\" - required attributes for all include the following - manufacturer_or_packer_name, manufacturer_or_packer_address, common_or_generic_name_of_commodity, net_quantity_or_measure_of_commodity_in_pkg, month_year_of_manufacture_packing_import; other attributes are required on case-by-case basis
type ItemOndcOrgStatutoryReqsPackagedCommodities struct {
	// name of manufacturer or packer (in case manufacturer is not the packer) or name of importer for imported goods
	ManufacturerOrPackerName *string `json:"manufacturer_or_packer_name,omitempty"`
	// address of manufacturer or packer (in case manufacturer is not the packer) or address of importer for imported goods
	ManufacturerOrPackerAddress *string `json:"manufacturer_or_packer_address,omitempty"`
	// common or generic name of commodity
	CommonOrGenericNameOfCommodity *string `json:"common_or_generic_name_of_commodity,omitempty"`
	// for packages with multiple products, the name and number of quantity of each (can be shown as \"name1-number_or_quantity; name2-number_or_quantity..\")
	MultipleProductsNameNumberOrQty *string `json:"multiple_products_name_number_or_qty,omitempty"`
	// net quantity of commodity in terms of standard unit of weight or measure of commodity contained in package
	NetQuantityOrMeasureOfCommodityInPkg *string `json:"net_quantity_or_measure_of_commodity_in_pkg,omitempty"`
	// month and year of manufacture or packing or import
	MonthYearOfManufacturePackingImport *string `json:"month_year_of_manufacture_packing_import,omitempty"`
	// country of origin for imported products (ISO 3166 Alpha-3 code format)
	ImportedProductCountryOfOrigin *string `json:"imported_product_country_of_origin,omitempty"`
}

// NewItemOndcOrgStatutoryReqsPackagedCommodities instantiates a new ItemOndcOrgStatutoryReqsPackagedCommodities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemOndcOrgStatutoryReqsPackagedCommodities() *ItemOndcOrgStatutoryReqsPackagedCommodities {
	this := ItemOndcOrgStatutoryReqsPackagedCommodities{}
	return &this
}

// NewItemOndcOrgStatutoryReqsPackagedCommoditiesWithDefaults instantiates a new ItemOndcOrgStatutoryReqsPackagedCommodities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemOndcOrgStatutoryReqsPackagedCommoditiesWithDefaults() *ItemOndcOrgStatutoryReqsPackagedCommodities {
	this := ItemOndcOrgStatutoryReqsPackagedCommodities{}
	return &this
}

// GetManufacturerOrPackerName returns the ManufacturerOrPackerName field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetManufacturerOrPackerName() string {
	if o == nil || isNil(o.ManufacturerOrPackerName) {
		var ret string
		return ret
	}
	return *o.ManufacturerOrPackerName
}

// GetManufacturerOrPackerNameOk returns a tuple with the ManufacturerOrPackerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetManufacturerOrPackerNameOk() (*string, bool) {
	if o == nil || isNil(o.ManufacturerOrPackerName) {
    return nil, false
	}
	return o.ManufacturerOrPackerName, true
}

// HasManufacturerOrPackerName returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasManufacturerOrPackerName() bool {
	if o != nil && !isNil(o.ManufacturerOrPackerName) {
		return true
	}

	return false
}

// SetManufacturerOrPackerName gets a reference to the given string and assigns it to the ManufacturerOrPackerName field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetManufacturerOrPackerName(v string) {
	o.ManufacturerOrPackerName = &v
}

// GetManufacturerOrPackerAddress returns the ManufacturerOrPackerAddress field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetManufacturerOrPackerAddress() string {
	if o == nil || isNil(o.ManufacturerOrPackerAddress) {
		var ret string
		return ret
	}
	return *o.ManufacturerOrPackerAddress
}

// GetManufacturerOrPackerAddressOk returns a tuple with the ManufacturerOrPackerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetManufacturerOrPackerAddressOk() (*string, bool) {
	if o == nil || isNil(o.ManufacturerOrPackerAddress) {
    return nil, false
	}
	return o.ManufacturerOrPackerAddress, true
}

// HasManufacturerOrPackerAddress returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasManufacturerOrPackerAddress() bool {
	if o != nil && !isNil(o.ManufacturerOrPackerAddress) {
		return true
	}

	return false
}

// SetManufacturerOrPackerAddress gets a reference to the given string and assigns it to the ManufacturerOrPackerAddress field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetManufacturerOrPackerAddress(v string) {
	o.ManufacturerOrPackerAddress = &v
}

// GetCommonOrGenericNameOfCommodity returns the CommonOrGenericNameOfCommodity field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetCommonOrGenericNameOfCommodity() string {
	if o == nil || isNil(o.CommonOrGenericNameOfCommodity) {
		var ret string
		return ret
	}
	return *o.CommonOrGenericNameOfCommodity
}

// GetCommonOrGenericNameOfCommodityOk returns a tuple with the CommonOrGenericNameOfCommodity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetCommonOrGenericNameOfCommodityOk() (*string, bool) {
	if o == nil || isNil(o.CommonOrGenericNameOfCommodity) {
    return nil, false
	}
	return o.CommonOrGenericNameOfCommodity, true
}

// HasCommonOrGenericNameOfCommodity returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasCommonOrGenericNameOfCommodity() bool {
	if o != nil && !isNil(o.CommonOrGenericNameOfCommodity) {
		return true
	}

	return false
}

// SetCommonOrGenericNameOfCommodity gets a reference to the given string and assigns it to the CommonOrGenericNameOfCommodity field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetCommonOrGenericNameOfCommodity(v string) {
	o.CommonOrGenericNameOfCommodity = &v
}

// GetMultipleProductsNameNumberOrQty returns the MultipleProductsNameNumberOrQty field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetMultipleProductsNameNumberOrQty() string {
	if o == nil || isNil(o.MultipleProductsNameNumberOrQty) {
		var ret string
		return ret
	}
	return *o.MultipleProductsNameNumberOrQty
}

// GetMultipleProductsNameNumberOrQtyOk returns a tuple with the MultipleProductsNameNumberOrQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetMultipleProductsNameNumberOrQtyOk() (*string, bool) {
	if o == nil || isNil(o.MultipleProductsNameNumberOrQty) {
    return nil, false
	}
	return o.MultipleProductsNameNumberOrQty, true
}

// HasMultipleProductsNameNumberOrQty returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasMultipleProductsNameNumberOrQty() bool {
	if o != nil && !isNil(o.MultipleProductsNameNumberOrQty) {
		return true
	}

	return false
}

// SetMultipleProductsNameNumberOrQty gets a reference to the given string and assigns it to the MultipleProductsNameNumberOrQty field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetMultipleProductsNameNumberOrQty(v string) {
	o.MultipleProductsNameNumberOrQty = &v
}

// GetNetQuantityOrMeasureOfCommodityInPkg returns the NetQuantityOrMeasureOfCommodityInPkg field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetNetQuantityOrMeasureOfCommodityInPkg() string {
	if o == nil || isNil(o.NetQuantityOrMeasureOfCommodityInPkg) {
		var ret string
		return ret
	}
	return *o.NetQuantityOrMeasureOfCommodityInPkg
}

// GetNetQuantityOrMeasureOfCommodityInPkgOk returns a tuple with the NetQuantityOrMeasureOfCommodityInPkg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetNetQuantityOrMeasureOfCommodityInPkgOk() (*string, bool) {
	if o == nil || isNil(o.NetQuantityOrMeasureOfCommodityInPkg) {
    return nil, false
	}
	return o.NetQuantityOrMeasureOfCommodityInPkg, true
}

// HasNetQuantityOrMeasureOfCommodityInPkg returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasNetQuantityOrMeasureOfCommodityInPkg() bool {
	if o != nil && !isNil(o.NetQuantityOrMeasureOfCommodityInPkg) {
		return true
	}

	return false
}

// SetNetQuantityOrMeasureOfCommodityInPkg gets a reference to the given string and assigns it to the NetQuantityOrMeasureOfCommodityInPkg field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetNetQuantityOrMeasureOfCommodityInPkg(v string) {
	o.NetQuantityOrMeasureOfCommodityInPkg = &v
}

// GetMonthYearOfManufacturePackingImport returns the MonthYearOfManufacturePackingImport field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetMonthYearOfManufacturePackingImport() string {
	if o == nil || isNil(o.MonthYearOfManufacturePackingImport) {
		var ret string
		return ret
	}
	return *o.MonthYearOfManufacturePackingImport
}

// GetMonthYearOfManufacturePackingImportOk returns a tuple with the MonthYearOfManufacturePackingImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetMonthYearOfManufacturePackingImportOk() (*string, bool) {
	if o == nil || isNil(o.MonthYearOfManufacturePackingImport) {
    return nil, false
	}
	return o.MonthYearOfManufacturePackingImport, true
}

// HasMonthYearOfManufacturePackingImport returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasMonthYearOfManufacturePackingImport() bool {
	if o != nil && !isNil(o.MonthYearOfManufacturePackingImport) {
		return true
	}

	return false
}

// SetMonthYearOfManufacturePackingImport gets a reference to the given string and assigns it to the MonthYearOfManufacturePackingImport field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetMonthYearOfManufacturePackingImport(v string) {
	o.MonthYearOfManufacturePackingImport = &v
}

// GetImportedProductCountryOfOrigin returns the ImportedProductCountryOfOrigin field value if set, zero value otherwise.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetImportedProductCountryOfOrigin() string {
	if o == nil || isNil(o.ImportedProductCountryOfOrigin) {
		var ret string
		return ret
	}
	return *o.ImportedProductCountryOfOrigin
}

// GetImportedProductCountryOfOriginOk returns a tuple with the ImportedProductCountryOfOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) GetImportedProductCountryOfOriginOk() (*string, bool) {
	if o == nil || isNil(o.ImportedProductCountryOfOrigin) {
    return nil, false
	}
	return o.ImportedProductCountryOfOrigin, true
}

// HasImportedProductCountryOfOrigin returns a boolean if a field has been set.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) HasImportedProductCountryOfOrigin() bool {
	if o != nil && !isNil(o.ImportedProductCountryOfOrigin) {
		return true
	}

	return false
}

// SetImportedProductCountryOfOrigin gets a reference to the given string and assigns it to the ImportedProductCountryOfOrigin field.
func (o *ItemOndcOrgStatutoryReqsPackagedCommodities) SetImportedProductCountryOfOrigin(v string) {
	o.ImportedProductCountryOfOrigin = &v
}

func (o ItemOndcOrgStatutoryReqsPackagedCommodities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ManufacturerOrPackerName) {
		toSerialize["manufacturer_or_packer_name"] = o.ManufacturerOrPackerName
	}
	if !isNil(o.ManufacturerOrPackerAddress) {
		toSerialize["manufacturer_or_packer_address"] = o.ManufacturerOrPackerAddress
	}
	if !isNil(o.CommonOrGenericNameOfCommodity) {
		toSerialize["common_or_generic_name_of_commodity"] = o.CommonOrGenericNameOfCommodity
	}
	if !isNil(o.MultipleProductsNameNumberOrQty) {
		toSerialize["multiple_products_name_number_or_qty"] = o.MultipleProductsNameNumberOrQty
	}
	if !isNil(o.NetQuantityOrMeasureOfCommodityInPkg) {
		toSerialize["net_quantity_or_measure_of_commodity_in_pkg"] = o.NetQuantityOrMeasureOfCommodityInPkg
	}
	if !isNil(o.MonthYearOfManufacturePackingImport) {
		toSerialize["month_year_of_manufacture_packing_import"] = o.MonthYearOfManufacturePackingImport
	}
	if !isNil(o.ImportedProductCountryOfOrigin) {
		toSerialize["imported_product_country_of_origin"] = o.ImportedProductCountryOfOrigin
	}
	return json.Marshal(toSerialize)
}

type NullableItemOndcOrgStatutoryReqsPackagedCommodities struct {
	value *ItemOndcOrgStatutoryReqsPackagedCommodities
	isSet bool
}

func (v NullableItemOndcOrgStatutoryReqsPackagedCommodities) Get() *ItemOndcOrgStatutoryReqsPackagedCommodities {
	return v.value
}

func (v *NullableItemOndcOrgStatutoryReqsPackagedCommodities) Set(val *ItemOndcOrgStatutoryReqsPackagedCommodities) {
	v.value = val
	v.isSet = true
}

func (v NullableItemOndcOrgStatutoryReqsPackagedCommodities) IsSet() bool {
	return v.isSet
}

func (v *NullableItemOndcOrgStatutoryReqsPackagedCommodities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemOndcOrgStatutoryReqsPackagedCommodities(val *ItemOndcOrgStatutoryReqsPackagedCommodities) *NullableItemOndcOrgStatutoryReqsPackagedCommodities {
	return &NullableItemOndcOrgStatutoryReqsPackagedCommodities{value: val, isSet: true}
}

func (v NullableItemOndcOrgStatutoryReqsPackagedCommodities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemOndcOrgStatutoryReqsPackagedCommodities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


