/*
ONDC Protocol API for retail (grocery, f&b)

ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Payment Describes a payment
type Payment struct {
	// A payment uri to be called by the Buyer App. If empty, then the payment is to be done offline. The details of payment should be present in the params object. If ```tl_method``` = http/get, then the payment details will be sent as url params. Two url param values, ```$transaction_id``` and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234
	Uri *string `json:"uri,omitempty"`
	TlMethod *string `json:"tl_method,omitempty"`
	Params *PaymentParams `json:"params,omitempty"`
	Type *string `json:"type,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *Time `json:"time,omitempty"`
	CollectedBy *string `json:"collected_by,omitempty"`
	OndcOrgCollectedByStatus *string `json:"@ondc/org/collected_by_status,omitempty"`
	OndcOrgBuyerAppFinderFeeType *string `json:"@ondc/org/buyer_app_finder_fee_type,omitempty"`
	// Describes a decimal value
	OndcOrgBuyerAppFinderFeeAmount *string `json:"@ondc/org/buyer_app_finder_fee_amount,omitempty"`
	// Describes a decimal value
	OndcOrgWithholdingAmount *string `json:"@ondc/org/withholding_amount,omitempty"`
	OndcOrgWithholdingAmountStatus *string `json:"@ondc/org/withholding_amount_status,omitempty"`
	// return window for withholding amount in ISO8601 durations format e.g. 'PT24H' indicates 24 hour return window
	OndcOrgReturnWindow *string `json:"@ondc/org/return_window,omitempty"`
	OndcOrgReturnWindowStatus *string `json:"@ondc/org/return_window_status,omitempty"`
	// In case of prepaid payment, whether settlement between counterparties should be on the basis of collection, shipment or delivery
	OndcOrgSettlementBasis *string `json:"@ondc/org/settlement_basis,omitempty"`
	OndcOrgSettlementBasisStatus *string `json:"@ondc/org/settlement_basis_status,omitempty"`
	// settlement window for the counterparty in ISO8601 durations format e.g. 'PT48H' indicates 48 hour return window
	OndcOrgSettlementWindow *string `json:"@ondc/org/settlement_window,omitempty"`
	OndcOrgSettlementWindowStatus *string `json:"@ondc/org/settlement_window_status,omitempty"`
	OndcOrgSettlementDetails []PaymentOndcOrgSettlementDetailsInner `json:"@ondc/org/settlement_details,omitempty"`
}

// NewPayment instantiates a new Payment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayment() *Payment {
	this := Payment{}
	return &this
}

// NewPaymentWithDefaults instantiates a new Payment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentWithDefaults() *Payment {
	this := Payment{}
	return &this
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *Payment) GetUri() string {
	if o == nil || isNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetUriOk() (*string, bool) {
	if o == nil || isNil(o.Uri) {
    return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *Payment) HasUri() bool {
	if o != nil && !isNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *Payment) SetUri(v string) {
	o.Uri = &v
}

// GetTlMethod returns the TlMethod field value if set, zero value otherwise.
func (o *Payment) GetTlMethod() string {
	if o == nil || isNil(o.TlMethod) {
		var ret string
		return ret
	}
	return *o.TlMethod
}

// GetTlMethodOk returns a tuple with the TlMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetTlMethodOk() (*string, bool) {
	if o == nil || isNil(o.TlMethod) {
    return nil, false
	}
	return o.TlMethod, true
}

// HasTlMethod returns a boolean if a field has been set.
func (o *Payment) HasTlMethod() bool {
	if o != nil && !isNil(o.TlMethod) {
		return true
	}

	return false
}

// SetTlMethod gets a reference to the given string and assigns it to the TlMethod field.
func (o *Payment) SetTlMethod(v string) {
	o.TlMethod = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *Payment) GetParams() PaymentParams {
	if o == nil || isNil(o.Params) {
		var ret PaymentParams
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetParamsOk() (*PaymentParams, bool) {
	if o == nil || isNil(o.Params) {
    return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *Payment) HasParams() bool {
	if o != nil && !isNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given PaymentParams and assigns it to the Params field.
func (o *Payment) SetParams(v PaymentParams) {
	o.Params = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Payment) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Payment) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Payment) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Payment) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Payment) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Payment) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *Payment) GetTime() Time {
	if o == nil || isNil(o.Time) {
		var ret Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetTimeOk() (*Time, bool) {
	if o == nil || isNil(o.Time) {
    return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *Payment) HasTime() bool {
	if o != nil && !isNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given Time and assigns it to the Time field.
func (o *Payment) SetTime(v Time) {
	o.Time = &v
}

// GetCollectedBy returns the CollectedBy field value if set, zero value otherwise.
func (o *Payment) GetCollectedBy() string {
	if o == nil || isNil(o.CollectedBy) {
		var ret string
		return ret
	}
	return *o.CollectedBy
}

// GetCollectedByOk returns a tuple with the CollectedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetCollectedByOk() (*string, bool) {
	if o == nil || isNil(o.CollectedBy) {
    return nil, false
	}
	return o.CollectedBy, true
}

// HasCollectedBy returns a boolean if a field has been set.
func (o *Payment) HasCollectedBy() bool {
	if o != nil && !isNil(o.CollectedBy) {
		return true
	}

	return false
}

// SetCollectedBy gets a reference to the given string and assigns it to the CollectedBy field.
func (o *Payment) SetCollectedBy(v string) {
	o.CollectedBy = &v
}

// GetOndcOrgCollectedByStatus returns the OndcOrgCollectedByStatus field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgCollectedByStatus() string {
	if o == nil || isNil(o.OndcOrgCollectedByStatus) {
		var ret string
		return ret
	}
	return *o.OndcOrgCollectedByStatus
}

// GetOndcOrgCollectedByStatusOk returns a tuple with the OndcOrgCollectedByStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgCollectedByStatusOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgCollectedByStatus) {
    return nil, false
	}
	return o.OndcOrgCollectedByStatus, true
}

// HasOndcOrgCollectedByStatus returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgCollectedByStatus() bool {
	if o != nil && !isNil(o.OndcOrgCollectedByStatus) {
		return true
	}

	return false
}

// SetOndcOrgCollectedByStatus gets a reference to the given string and assigns it to the OndcOrgCollectedByStatus field.
func (o *Payment) SetOndcOrgCollectedByStatus(v string) {
	o.OndcOrgCollectedByStatus = &v
}

// GetOndcOrgBuyerAppFinderFeeType returns the OndcOrgBuyerAppFinderFeeType field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgBuyerAppFinderFeeType() string {
	if o == nil || isNil(o.OndcOrgBuyerAppFinderFeeType) {
		var ret string
		return ret
	}
	return *o.OndcOrgBuyerAppFinderFeeType
}

// GetOndcOrgBuyerAppFinderFeeTypeOk returns a tuple with the OndcOrgBuyerAppFinderFeeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgBuyerAppFinderFeeTypeOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgBuyerAppFinderFeeType) {
    return nil, false
	}
	return o.OndcOrgBuyerAppFinderFeeType, true
}

// HasOndcOrgBuyerAppFinderFeeType returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgBuyerAppFinderFeeType() bool {
	if o != nil && !isNil(o.OndcOrgBuyerAppFinderFeeType) {
		return true
	}

	return false
}

// SetOndcOrgBuyerAppFinderFeeType gets a reference to the given string and assigns it to the OndcOrgBuyerAppFinderFeeType field.
func (o *Payment) SetOndcOrgBuyerAppFinderFeeType(v string) {
	o.OndcOrgBuyerAppFinderFeeType = &v
}

// GetOndcOrgBuyerAppFinderFeeAmount returns the OndcOrgBuyerAppFinderFeeAmount field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgBuyerAppFinderFeeAmount() string {
	if o == nil || isNil(o.OndcOrgBuyerAppFinderFeeAmount) {
		var ret string
		return ret
	}
	return *o.OndcOrgBuyerAppFinderFeeAmount
}

// GetOndcOrgBuyerAppFinderFeeAmountOk returns a tuple with the OndcOrgBuyerAppFinderFeeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgBuyerAppFinderFeeAmountOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgBuyerAppFinderFeeAmount) {
    return nil, false
	}
	return o.OndcOrgBuyerAppFinderFeeAmount, true
}

// HasOndcOrgBuyerAppFinderFeeAmount returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgBuyerAppFinderFeeAmount() bool {
	if o != nil && !isNil(o.OndcOrgBuyerAppFinderFeeAmount) {
		return true
	}

	return false
}

// SetOndcOrgBuyerAppFinderFeeAmount gets a reference to the given string and assigns it to the OndcOrgBuyerAppFinderFeeAmount field.
func (o *Payment) SetOndcOrgBuyerAppFinderFeeAmount(v string) {
	o.OndcOrgBuyerAppFinderFeeAmount = &v
}

// GetOndcOrgWithholdingAmount returns the OndcOrgWithholdingAmount field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgWithholdingAmount() string {
	if o == nil || isNil(o.OndcOrgWithholdingAmount) {
		var ret string
		return ret
	}
	return *o.OndcOrgWithholdingAmount
}

// GetOndcOrgWithholdingAmountOk returns a tuple with the OndcOrgWithholdingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgWithholdingAmountOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgWithholdingAmount) {
    return nil, false
	}
	return o.OndcOrgWithholdingAmount, true
}

// HasOndcOrgWithholdingAmount returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgWithholdingAmount() bool {
	if o != nil && !isNil(o.OndcOrgWithholdingAmount) {
		return true
	}

	return false
}

// SetOndcOrgWithholdingAmount gets a reference to the given string and assigns it to the OndcOrgWithholdingAmount field.
func (o *Payment) SetOndcOrgWithholdingAmount(v string) {
	o.OndcOrgWithholdingAmount = &v
}

// GetOndcOrgWithholdingAmountStatus returns the OndcOrgWithholdingAmountStatus field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgWithholdingAmountStatus() string {
	if o == nil || isNil(o.OndcOrgWithholdingAmountStatus) {
		var ret string
		return ret
	}
	return *o.OndcOrgWithholdingAmountStatus
}

// GetOndcOrgWithholdingAmountStatusOk returns a tuple with the OndcOrgWithholdingAmountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgWithholdingAmountStatusOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgWithholdingAmountStatus) {
    return nil, false
	}
	return o.OndcOrgWithholdingAmountStatus, true
}

// HasOndcOrgWithholdingAmountStatus returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgWithholdingAmountStatus() bool {
	if o != nil && !isNil(o.OndcOrgWithholdingAmountStatus) {
		return true
	}

	return false
}

// SetOndcOrgWithholdingAmountStatus gets a reference to the given string and assigns it to the OndcOrgWithholdingAmountStatus field.
func (o *Payment) SetOndcOrgWithholdingAmountStatus(v string) {
	o.OndcOrgWithholdingAmountStatus = &v
}

// GetOndcOrgReturnWindow returns the OndcOrgReturnWindow field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgReturnWindow() string {
	if o == nil || isNil(o.OndcOrgReturnWindow) {
		var ret string
		return ret
	}
	return *o.OndcOrgReturnWindow
}

// GetOndcOrgReturnWindowOk returns a tuple with the OndcOrgReturnWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgReturnWindowOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgReturnWindow) {
    return nil, false
	}
	return o.OndcOrgReturnWindow, true
}

// HasOndcOrgReturnWindow returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgReturnWindow() bool {
	if o != nil && !isNil(o.OndcOrgReturnWindow) {
		return true
	}

	return false
}

// SetOndcOrgReturnWindow gets a reference to the given string and assigns it to the OndcOrgReturnWindow field.
func (o *Payment) SetOndcOrgReturnWindow(v string) {
	o.OndcOrgReturnWindow = &v
}

// GetOndcOrgReturnWindowStatus returns the OndcOrgReturnWindowStatus field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgReturnWindowStatus() string {
	if o == nil || isNil(o.OndcOrgReturnWindowStatus) {
		var ret string
		return ret
	}
	return *o.OndcOrgReturnWindowStatus
}

// GetOndcOrgReturnWindowStatusOk returns a tuple with the OndcOrgReturnWindowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgReturnWindowStatusOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgReturnWindowStatus) {
    return nil, false
	}
	return o.OndcOrgReturnWindowStatus, true
}

// HasOndcOrgReturnWindowStatus returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgReturnWindowStatus() bool {
	if o != nil && !isNil(o.OndcOrgReturnWindowStatus) {
		return true
	}

	return false
}

// SetOndcOrgReturnWindowStatus gets a reference to the given string and assigns it to the OndcOrgReturnWindowStatus field.
func (o *Payment) SetOndcOrgReturnWindowStatus(v string) {
	o.OndcOrgReturnWindowStatus = &v
}

// GetOndcOrgSettlementBasis returns the OndcOrgSettlementBasis field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgSettlementBasis() string {
	if o == nil || isNil(o.OndcOrgSettlementBasis) {
		var ret string
		return ret
	}
	return *o.OndcOrgSettlementBasis
}

// GetOndcOrgSettlementBasisOk returns a tuple with the OndcOrgSettlementBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgSettlementBasisOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgSettlementBasis) {
    return nil, false
	}
	return o.OndcOrgSettlementBasis, true
}

// HasOndcOrgSettlementBasis returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgSettlementBasis() bool {
	if o != nil && !isNil(o.OndcOrgSettlementBasis) {
		return true
	}

	return false
}

// SetOndcOrgSettlementBasis gets a reference to the given string and assigns it to the OndcOrgSettlementBasis field.
func (o *Payment) SetOndcOrgSettlementBasis(v string) {
	o.OndcOrgSettlementBasis = &v
}

// GetOndcOrgSettlementBasisStatus returns the OndcOrgSettlementBasisStatus field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgSettlementBasisStatus() string {
	if o == nil || isNil(o.OndcOrgSettlementBasisStatus) {
		var ret string
		return ret
	}
	return *o.OndcOrgSettlementBasisStatus
}

// GetOndcOrgSettlementBasisStatusOk returns a tuple with the OndcOrgSettlementBasisStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgSettlementBasisStatusOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgSettlementBasisStatus) {
    return nil, false
	}
	return o.OndcOrgSettlementBasisStatus, true
}

// HasOndcOrgSettlementBasisStatus returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgSettlementBasisStatus() bool {
	if o != nil && !isNil(o.OndcOrgSettlementBasisStatus) {
		return true
	}

	return false
}

// SetOndcOrgSettlementBasisStatus gets a reference to the given string and assigns it to the OndcOrgSettlementBasisStatus field.
func (o *Payment) SetOndcOrgSettlementBasisStatus(v string) {
	o.OndcOrgSettlementBasisStatus = &v
}

// GetOndcOrgSettlementWindow returns the OndcOrgSettlementWindow field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgSettlementWindow() string {
	if o == nil || isNil(o.OndcOrgSettlementWindow) {
		var ret string
		return ret
	}
	return *o.OndcOrgSettlementWindow
}

// GetOndcOrgSettlementWindowOk returns a tuple with the OndcOrgSettlementWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgSettlementWindowOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgSettlementWindow) {
    return nil, false
	}
	return o.OndcOrgSettlementWindow, true
}

// HasOndcOrgSettlementWindow returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgSettlementWindow() bool {
	if o != nil && !isNil(o.OndcOrgSettlementWindow) {
		return true
	}

	return false
}

// SetOndcOrgSettlementWindow gets a reference to the given string and assigns it to the OndcOrgSettlementWindow field.
func (o *Payment) SetOndcOrgSettlementWindow(v string) {
	o.OndcOrgSettlementWindow = &v
}

// GetOndcOrgSettlementWindowStatus returns the OndcOrgSettlementWindowStatus field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgSettlementWindowStatus() string {
	if o == nil || isNil(o.OndcOrgSettlementWindowStatus) {
		var ret string
		return ret
	}
	return *o.OndcOrgSettlementWindowStatus
}

// GetOndcOrgSettlementWindowStatusOk returns a tuple with the OndcOrgSettlementWindowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgSettlementWindowStatusOk() (*string, bool) {
	if o == nil || isNil(o.OndcOrgSettlementWindowStatus) {
    return nil, false
	}
	return o.OndcOrgSettlementWindowStatus, true
}

// HasOndcOrgSettlementWindowStatus returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgSettlementWindowStatus() bool {
	if o != nil && !isNil(o.OndcOrgSettlementWindowStatus) {
		return true
	}

	return false
}

// SetOndcOrgSettlementWindowStatus gets a reference to the given string and assigns it to the OndcOrgSettlementWindowStatus field.
func (o *Payment) SetOndcOrgSettlementWindowStatus(v string) {
	o.OndcOrgSettlementWindowStatus = &v
}

// GetOndcOrgSettlementDetails returns the OndcOrgSettlementDetails field value if set, zero value otherwise.
func (o *Payment) GetOndcOrgSettlementDetails() []PaymentOndcOrgSettlementDetailsInner {
	if o == nil || isNil(o.OndcOrgSettlementDetails) {
		var ret []PaymentOndcOrgSettlementDetailsInner
		return ret
	}
	return o.OndcOrgSettlementDetails
}

// GetOndcOrgSettlementDetailsOk returns a tuple with the OndcOrgSettlementDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Payment) GetOndcOrgSettlementDetailsOk() ([]PaymentOndcOrgSettlementDetailsInner, bool) {
	if o == nil || isNil(o.OndcOrgSettlementDetails) {
    return nil, false
	}
	return o.OndcOrgSettlementDetails, true
}

// HasOndcOrgSettlementDetails returns a boolean if a field has been set.
func (o *Payment) HasOndcOrgSettlementDetails() bool {
	if o != nil && !isNil(o.OndcOrgSettlementDetails) {
		return true
	}

	return false
}

// SetOndcOrgSettlementDetails gets a reference to the given []PaymentOndcOrgSettlementDetailsInner and assigns it to the OndcOrgSettlementDetails field.
func (o *Payment) SetOndcOrgSettlementDetails(v []PaymentOndcOrgSettlementDetailsInner) {
	o.OndcOrgSettlementDetails = v
}

func (o Payment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !isNil(o.TlMethod) {
		toSerialize["tl_method"] = o.TlMethod
	}
	if !isNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !isNil(o.CollectedBy) {
		toSerialize["collected_by"] = o.CollectedBy
	}
	if !isNil(o.OndcOrgCollectedByStatus) {
		toSerialize["@ondc/org/collected_by_status"] = o.OndcOrgCollectedByStatus
	}
	if !isNil(o.OndcOrgBuyerAppFinderFeeType) {
		toSerialize["@ondc/org/buyer_app_finder_fee_type"] = o.OndcOrgBuyerAppFinderFeeType
	}
	if !isNil(o.OndcOrgBuyerAppFinderFeeAmount) {
		toSerialize["@ondc/org/buyer_app_finder_fee_amount"] = o.OndcOrgBuyerAppFinderFeeAmount
	}
	if !isNil(o.OndcOrgWithholdingAmount) {
		toSerialize["@ondc/org/withholding_amount"] = o.OndcOrgWithholdingAmount
	}
	if !isNil(o.OndcOrgWithholdingAmountStatus) {
		toSerialize["@ondc/org/withholding_amount_status"] = o.OndcOrgWithholdingAmountStatus
	}
	if !isNil(o.OndcOrgReturnWindow) {
		toSerialize["@ondc/org/return_window"] = o.OndcOrgReturnWindow
	}
	if !isNil(o.OndcOrgReturnWindowStatus) {
		toSerialize["@ondc/org/return_window_status"] = o.OndcOrgReturnWindowStatus
	}
	if !isNil(o.OndcOrgSettlementBasis) {
		toSerialize["@ondc/org/settlement_basis"] = o.OndcOrgSettlementBasis
	}
	if !isNil(o.OndcOrgSettlementBasisStatus) {
		toSerialize["@ondc/org/settlement_basis_status"] = o.OndcOrgSettlementBasisStatus
	}
	if !isNil(o.OndcOrgSettlementWindow) {
		toSerialize["@ondc/org/settlement_window"] = o.OndcOrgSettlementWindow
	}
	if !isNil(o.OndcOrgSettlementWindowStatus) {
		toSerialize["@ondc/org/settlement_window_status"] = o.OndcOrgSettlementWindowStatus
	}
	if !isNil(o.OndcOrgSettlementDetails) {
		toSerialize["@ondc/org/settlement_details"] = o.OndcOrgSettlementDetails
	}
	return json.Marshal(toSerialize)
}

type NullablePayment struct {
	value *Payment
	isSet bool
}

func (v NullablePayment) Get() *Payment {
	return v.value
}

func (v *NullablePayment) Set(val *Payment) {
	v.value = val
	v.isSet = true
}

func (v NullablePayment) IsSet() bool {
	return v.isSet
}

func (v *NullablePayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayment(val *Payment) *NullablePayment {
	return &NullablePayment{value: val, isSet: true}
}

func (v NullablePayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


