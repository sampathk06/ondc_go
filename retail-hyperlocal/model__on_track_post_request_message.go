/*
ONDC Protocol API for retail (grocery, f&b)

ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OnTrackPostRequestMessage struct for OnTrackPostRequestMessage
type OnTrackPostRequestMessage struct {
	Tracking Tracking `json:"tracking"`
}

// NewOnTrackPostRequestMessage instantiates a new OnTrackPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnTrackPostRequestMessage(tracking Tracking) *OnTrackPostRequestMessage {
	this := OnTrackPostRequestMessage{}
	this.Tracking = tracking
	return &this
}

// NewOnTrackPostRequestMessageWithDefaults instantiates a new OnTrackPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnTrackPostRequestMessageWithDefaults() *OnTrackPostRequestMessage {
	this := OnTrackPostRequestMessage{}
	return &this
}

// GetTracking returns the Tracking field value
func (o *OnTrackPostRequestMessage) GetTracking() Tracking {
	if o == nil {
		var ret Tracking
		return ret
	}

	return o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value
// and a boolean to check if the value has been set.
func (o *OnTrackPostRequestMessage) GetTrackingOk() (*Tracking, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tracking, true
}

// SetTracking sets field value
func (o *OnTrackPostRequestMessage) SetTracking(v Tracking) {
	o.Tracking = v
}

func (o OnTrackPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tracking"] = o.Tracking
	}
	return json.Marshal(toSerialize)
}

type NullableOnTrackPostRequestMessage struct {
	value *OnTrackPostRequestMessage
	isSet bool
}

func (v NullableOnTrackPostRequestMessage) Get() *OnTrackPostRequestMessage {
	return v.value
}

func (v *NullableOnTrackPostRequestMessage) Set(val *OnTrackPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableOnTrackPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableOnTrackPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnTrackPostRequestMessage(val *OnTrackPostRequestMessage) *NullableOnTrackPostRequestMessage {
	return &NullableOnTrackPostRequestMessage{value: val, isSet: true}
}

func (v NullableOnTrackPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnTrackPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


