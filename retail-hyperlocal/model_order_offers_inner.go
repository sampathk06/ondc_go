/*
ONDC Protocol API for retail (grocery, f&b)

ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderOffersInner struct for OrderOffersInner
type OrderOffersInner struct {
	Id Id `json:"id"`
}

// NewOrderOffersInner instantiates a new OrderOffersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderOffersInner(id Id) *OrderOffersInner {
	this := OrderOffersInner{}
	this.Id = id
	return &this
}

// NewOrderOffersInnerWithDefaults instantiates a new OrderOffersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderOffersInnerWithDefaults() *OrderOffersInner {
	this := OrderOffersInner{}
	return &this
}

// GetId returns the Id field value
func (o *OrderOffersInner) GetId() Id {
	if o == nil {
		var ret Id
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrderOffersInner) GetIdOk() (*Id, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrderOffersInner) SetId(v Id) {
	o.Id = v
}

func (o OrderOffersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableOrderOffersInner struct {
	value *OrderOffersInner
	isSet bool
}

func (v NullableOrderOffersInner) Get() *OrderOffersInner {
	return v.value
}

func (v *NullableOrderOffersInner) Set(val *OrderOffersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderOffersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderOffersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderOffersInner(val *OrderOffersInner) *NullableOrderOffersInner {
	return &NullableOrderOffersInner{value: val, isSet: true}
}

func (v NullableOrderOffersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderOffersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


