/*
ONDC Protocol API for retail (grocery, f&b)

ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CancellationReasonsPostRequestMessage struct for CancellationReasonsPostRequestMessage
type CancellationReasonsPostRequestMessage struct {
	CancellationReasons []Option `json:"cancellation_reasons,omitempty"`
}

// NewCancellationReasonsPostRequestMessage instantiates a new CancellationReasonsPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancellationReasonsPostRequestMessage() *CancellationReasonsPostRequestMessage {
	this := CancellationReasonsPostRequestMessage{}
	return &this
}

// NewCancellationReasonsPostRequestMessageWithDefaults instantiates a new CancellationReasonsPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancellationReasonsPostRequestMessageWithDefaults() *CancellationReasonsPostRequestMessage {
	this := CancellationReasonsPostRequestMessage{}
	return &this
}

// GetCancellationReasons returns the CancellationReasons field value if set, zero value otherwise.
func (o *CancellationReasonsPostRequestMessage) GetCancellationReasons() []Option {
	if o == nil || isNil(o.CancellationReasons) {
		var ret []Option
		return ret
	}
	return o.CancellationReasons
}

// GetCancellationReasonsOk returns a tuple with the CancellationReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationReasonsPostRequestMessage) GetCancellationReasonsOk() ([]Option, bool) {
	if o == nil || isNil(o.CancellationReasons) {
    return nil, false
	}
	return o.CancellationReasons, true
}

// HasCancellationReasons returns a boolean if a field has been set.
func (o *CancellationReasonsPostRequestMessage) HasCancellationReasons() bool {
	if o != nil && !isNil(o.CancellationReasons) {
		return true
	}

	return false
}

// SetCancellationReasons gets a reference to the given []Option and assigns it to the CancellationReasons field.
func (o *CancellationReasonsPostRequestMessage) SetCancellationReasons(v []Option) {
	o.CancellationReasons = v
}

func (o CancellationReasonsPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CancellationReasons) {
		toSerialize["cancellation_reasons"] = o.CancellationReasons
	}
	return json.Marshal(toSerialize)
}

type NullableCancellationReasonsPostRequestMessage struct {
	value *CancellationReasonsPostRequestMessage
	isSet bool
}

func (v NullableCancellationReasonsPostRequestMessage) Get() *CancellationReasonsPostRequestMessage {
	return v.value
}

func (v *NullableCancellationReasonsPostRequestMessage) Set(val *CancellationReasonsPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableCancellationReasonsPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableCancellationReasonsPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancellationReasonsPostRequestMessage(val *CancellationReasonsPostRequestMessage) *NullableCancellationReasonsPostRequestMessage {
	return &NullableCancellationReasonsPostRequestMessage{value: val, isSet: true}
}

func (v NullableCancellationReasonsPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancellationReasonsPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


