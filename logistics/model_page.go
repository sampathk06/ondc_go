/*
ONDC Protocol API for logistics

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Page Describes a page in a search result
type Page struct {
	Id *string `json:"id,omitempty"`
	NextId *string `json:"next_id,omitempty"`
}

// NewPage instantiates a new Page object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPage() *Page {
	this := Page{}
	return &this
}

// NewPageWithDefaults instantiates a new Page object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageWithDefaults() *Page {
	this := Page{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Page) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Page) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Page) SetId(v string) {
	o.Id = &v
}

// GetNextId returns the NextId field value if set, zero value otherwise.
func (o *Page) GetNextId() string {
	if o == nil || isNil(o.NextId) {
		var ret string
		return ret
	}
	return *o.NextId
}

// GetNextIdOk returns a tuple with the NextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetNextIdOk() (*string, bool) {
	if o == nil || isNil(o.NextId) {
    return nil, false
	}
	return o.NextId, true
}

// HasNextId returns a boolean if a field has been set.
func (o *Page) HasNextId() bool {
	if o != nil && !isNil(o.NextId) {
		return true
	}

	return false
}

// SetNextId gets a reference to the given string and assigns it to the NextId field.
func (o *Page) SetNextId(v string) {
	o.NextId = &v
}

func (o Page) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.NextId) {
		toSerialize["next_id"] = o.NextId
	}
	return json.Marshal(toSerialize)
}

type NullablePage struct {
	value *Page
	isSet bool
}

func (v NullablePage) Get() *Page {
	return v.value
}

func (v *NullablePage) Set(val *Page) {
	v.value = val
	v.isSet = true
}

func (v NullablePage) IsSet() bool {
	return v.isSet
}

func (v *NullablePage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePage(val *Page) *NullablePage {
	return &NullablePage{value: val, isSet: true}
}

func (v NullablePage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


