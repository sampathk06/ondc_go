/*
ONDC Protocol API for logistics

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FulfillmentStart Details on the start of fulfillment
type FulfillmentStart struct {
	Location *Location `json:"location,omitempty"`
	Time *Time `json:"time,omitempty"`
	Instructions *Descriptor `json:"instructions,omitempty"`
	Contact *Contact `json:"contact,omitempty"`
	Person *Person `json:"person,omitempty"`
	Authorization *Authorization `json:"authorization,omitempty"`
}

// NewFulfillmentStart instantiates a new FulfillmentStart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFulfillmentStart() *FulfillmentStart {
	this := FulfillmentStart{}
	return &this
}

// NewFulfillmentStartWithDefaults instantiates a new FulfillmentStart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFulfillmentStartWithDefaults() *FulfillmentStart {
	this := FulfillmentStart{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *FulfillmentStart) GetLocation() Location {
	if o == nil || isNil(o.Location) {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentStart) GetLocationOk() (*Location, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *FulfillmentStart) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *FulfillmentStart) SetLocation(v Location) {
	o.Location = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *FulfillmentStart) GetTime() Time {
	if o == nil || isNil(o.Time) {
		var ret Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentStart) GetTimeOk() (*Time, bool) {
	if o == nil || isNil(o.Time) {
    return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *FulfillmentStart) HasTime() bool {
	if o != nil && !isNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given Time and assigns it to the Time field.
func (o *FulfillmentStart) SetTime(v Time) {
	o.Time = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *FulfillmentStart) GetInstructions() Descriptor {
	if o == nil || isNil(o.Instructions) {
		var ret Descriptor
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentStart) GetInstructionsOk() (*Descriptor, bool) {
	if o == nil || isNil(o.Instructions) {
    return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *FulfillmentStart) HasInstructions() bool {
	if o != nil && !isNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given Descriptor and assigns it to the Instructions field.
func (o *FulfillmentStart) SetInstructions(v Descriptor) {
	o.Instructions = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *FulfillmentStart) GetContact() Contact {
	if o == nil || isNil(o.Contact) {
		var ret Contact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentStart) GetContactOk() (*Contact, bool) {
	if o == nil || isNil(o.Contact) {
    return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *FulfillmentStart) HasContact() bool {
	if o != nil && !isNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given Contact and assigns it to the Contact field.
func (o *FulfillmentStart) SetContact(v Contact) {
	o.Contact = &v
}

// GetPerson returns the Person field value if set, zero value otherwise.
func (o *FulfillmentStart) GetPerson() Person {
	if o == nil || isNil(o.Person) {
		var ret Person
		return ret
	}
	return *o.Person
}

// GetPersonOk returns a tuple with the Person field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentStart) GetPersonOk() (*Person, bool) {
	if o == nil || isNil(o.Person) {
    return nil, false
	}
	return o.Person, true
}

// HasPerson returns a boolean if a field has been set.
func (o *FulfillmentStart) HasPerson() bool {
	if o != nil && !isNil(o.Person) {
		return true
	}

	return false
}

// SetPerson gets a reference to the given Person and assigns it to the Person field.
func (o *FulfillmentStart) SetPerson(v Person) {
	o.Person = &v
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *FulfillmentStart) GetAuthorization() Authorization {
	if o == nil || isNil(o.Authorization) {
		var ret Authorization
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentStart) GetAuthorizationOk() (*Authorization, bool) {
	if o == nil || isNil(o.Authorization) {
    return nil, false
	}
	return o.Authorization, true
}

// HasAuthorization returns a boolean if a field has been set.
func (o *FulfillmentStart) HasAuthorization() bool {
	if o != nil && !isNil(o.Authorization) {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given Authorization and assigns it to the Authorization field.
func (o *FulfillmentStart) SetAuthorization(v Authorization) {
	o.Authorization = &v
}

func (o FulfillmentStart) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !isNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !isNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !isNil(o.Person) {
		toSerialize["person"] = o.Person
	}
	if !isNil(o.Authorization) {
		toSerialize["authorization"] = o.Authorization
	}
	return json.Marshal(toSerialize)
}

type NullableFulfillmentStart struct {
	value *FulfillmentStart
	isSet bool
}

func (v NullableFulfillmentStart) Get() *FulfillmentStart {
	return v.value
}

func (v *NullableFulfillmentStart) Set(val *FulfillmentStart) {
	v.value = val
	v.isSet = true
}

func (v NullableFulfillmentStart) IsSet() bool {
	return v.isSet
}

func (v *NullableFulfillmentStart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFulfillmentStart(val *FulfillmentStart) *NullableFulfillmentStart {
	return &NullableFulfillmentStart{value: val, isSet: true}
}

func (v NullableFulfillmentStart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFulfillmentStart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


