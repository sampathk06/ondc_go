/*
ONDC Protocol API for logistics

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SupportPostRequest struct for SupportPostRequest
type SupportPostRequest struct {
	Context Context `json:"context"`
	Message SupportPostRequestMessage `json:"message"`
}

// NewSupportPostRequest instantiates a new SupportPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportPostRequest(context Context, message SupportPostRequestMessage) *SupportPostRequest {
	this := SupportPostRequest{}
	this.Context = context
	this.Message = message
	return &this
}

// NewSupportPostRequestWithDefaults instantiates a new SupportPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportPostRequestWithDefaults() *SupportPostRequest {
	this := SupportPostRequest{}
	return &this
}

// GetContext returns the Context field value
func (o *SupportPostRequest) GetContext() Context {
	if o == nil {
		var ret Context
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *SupportPostRequest) GetContextOk() (*Context, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *SupportPostRequest) SetContext(v Context) {
	o.Context = v
}

// GetMessage returns the Message field value
func (o *SupportPostRequest) GetMessage() SupportPostRequestMessage {
	if o == nil {
		var ret SupportPostRequestMessage
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *SupportPostRequest) GetMessageOk() (*SupportPostRequestMessage, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *SupportPostRequest) SetMessage(v SupportPostRequestMessage) {
	o.Message = v
}

func (o SupportPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["context"] = o.Context
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableSupportPostRequest struct {
	value *SupportPostRequest
	isSet bool
}

func (v NullableSupportPostRequest) Get() *SupportPostRequest {
	return v.value
}

func (v *NullableSupportPostRequest) Set(val *SupportPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportPostRequest(val *SupportPostRequest) *NullableSupportPostRequest {
	return &NullableSupportPostRequest{value: val, isSet: true}
}

func (v NullableSupportPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


