/*
ONDC Protocol API for logistics

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderOndcOrgLinkedOrderItemsInner struct for OrderOndcOrgLinkedOrderItemsInner
type OrderOndcOrgLinkedOrderItemsInner struct {
	CategoryId *string `json:"category_id,omitempty"`
	Descriptor *Descriptor `json:"descriptor,omitempty"`
	Quantity *Selected `json:"quantity,omitempty"`
	Price *Price `json:"price,omitempty"`
}

// NewOrderOndcOrgLinkedOrderItemsInner instantiates a new OrderOndcOrgLinkedOrderItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderOndcOrgLinkedOrderItemsInner() *OrderOndcOrgLinkedOrderItemsInner {
	this := OrderOndcOrgLinkedOrderItemsInner{}
	return &this
}

// NewOrderOndcOrgLinkedOrderItemsInnerWithDefaults instantiates a new OrderOndcOrgLinkedOrderItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderOndcOrgLinkedOrderItemsInnerWithDefaults() *OrderOndcOrgLinkedOrderItemsInner {
	this := OrderOndcOrgLinkedOrderItemsInner{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetCategoryId() string {
	if o == nil || isNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetCategoryIdOk() (*string, bool) {
	if o == nil || isNil(o.CategoryId) {
    return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) HasCategoryId() bool {
	if o != nil && !isNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *OrderOndcOrgLinkedOrderItemsInner) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetDescriptor returns the Descriptor field value if set, zero value otherwise.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetDescriptor() Descriptor {
	if o == nil || isNil(o.Descriptor) {
		var ret Descriptor
		return ret
	}
	return *o.Descriptor
}

// GetDescriptorOk returns a tuple with the Descriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetDescriptorOk() (*Descriptor, bool) {
	if o == nil || isNil(o.Descriptor) {
    return nil, false
	}
	return o.Descriptor, true
}

// HasDescriptor returns a boolean if a field has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) HasDescriptor() bool {
	if o != nil && !isNil(o.Descriptor) {
		return true
	}

	return false
}

// SetDescriptor gets a reference to the given Descriptor and assigns it to the Descriptor field.
func (o *OrderOndcOrgLinkedOrderItemsInner) SetDescriptor(v Descriptor) {
	o.Descriptor = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetQuantity() Selected {
	if o == nil || isNil(o.Quantity) {
		var ret Selected
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetQuantityOk() (*Selected, bool) {
	if o == nil || isNil(o.Quantity) {
    return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) HasQuantity() bool {
	if o != nil && !isNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given Selected and assigns it to the Quantity field.
func (o *OrderOndcOrgLinkedOrderItemsInner) SetQuantity(v Selected) {
	o.Quantity = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetPrice() Price {
	if o == nil || isNil(o.Price) {
		var ret Price
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) GetPriceOk() (*Price, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OrderOndcOrgLinkedOrderItemsInner) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given Price and assigns it to the Price field.
func (o *OrderOndcOrgLinkedOrderItemsInner) SetPrice(v Price) {
	o.Price = &v
}

func (o OrderOndcOrgLinkedOrderItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !isNil(o.Descriptor) {
		toSerialize["descriptor"] = o.Descriptor
	}
	if !isNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableOrderOndcOrgLinkedOrderItemsInner struct {
	value *OrderOndcOrgLinkedOrderItemsInner
	isSet bool
}

func (v NullableOrderOndcOrgLinkedOrderItemsInner) Get() *OrderOndcOrgLinkedOrderItemsInner {
	return v.value
}

func (v *NullableOrderOndcOrgLinkedOrderItemsInner) Set(val *OrderOndcOrgLinkedOrderItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderOndcOrgLinkedOrderItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderOndcOrgLinkedOrderItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderOndcOrgLinkedOrderItemsInner(val *OrderOndcOrgLinkedOrderItemsInner) *NullableOrderOndcOrgLinkedOrderItemsInner {
	return &NullableOrderOndcOrgLinkedOrderItemsInner{value: val, isSet: true}
}

func (v NullableOrderOndcOrgLinkedOrderItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderOndcOrgLinkedOrderItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


