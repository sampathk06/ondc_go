/*
ONDC Protocol API for logistics

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OnSearchPostRequestMessage struct for OnSearchPostRequestMessage
type OnSearchPostRequestMessage struct {
	Catalog Catalog `json:"catalog"`
}

// NewOnSearchPostRequestMessage instantiates a new OnSearchPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnSearchPostRequestMessage(catalog Catalog) *OnSearchPostRequestMessage {
	this := OnSearchPostRequestMessage{}
	this.Catalog = catalog
	return &this
}

// NewOnSearchPostRequestMessageWithDefaults instantiates a new OnSearchPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnSearchPostRequestMessageWithDefaults() *OnSearchPostRequestMessage {
	this := OnSearchPostRequestMessage{}
	return &this
}

// GetCatalog returns the Catalog field value
func (o *OnSearchPostRequestMessage) GetCatalog() Catalog {
	if o == nil {
		var ret Catalog
		return ret
	}

	return o.Catalog
}

// GetCatalogOk returns a tuple with the Catalog field value
// and a boolean to check if the value has been set.
func (o *OnSearchPostRequestMessage) GetCatalogOk() (*Catalog, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Catalog, true
}

// SetCatalog sets field value
func (o *OnSearchPostRequestMessage) SetCatalog(v Catalog) {
	o.Catalog = v
}

func (o OnSearchPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["catalog"] = o.Catalog
	}
	return json.Marshal(toSerialize)
}

type NullableOnSearchPostRequestMessage struct {
	value *OnSearchPostRequestMessage
	isSet bool
}

func (v NullableOnSearchPostRequestMessage) Get() *OnSearchPostRequestMessage {
	return v.value
}

func (v *NullableOnSearchPostRequestMessage) Set(val *OnSearchPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableOnSearchPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableOnSearchPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnSearchPostRequestMessage(val *OnSearchPostRequestMessage) *NullableOnSearchPostRequestMessage {
	return &NullableOnSearchPostRequestMessage{value: val, isSet: true}
}

func (v NullableOnSearchPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnSearchPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


