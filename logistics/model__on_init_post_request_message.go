/*
ONDC Protocol API for logistics

ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3

API version: 1.0.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OnInitPostRequestMessage struct for OnInitPostRequestMessage
type OnInitPostRequestMessage struct {
	Order OnInitPostRequestMessageOrder `json:"order"`
}

// NewOnInitPostRequestMessage instantiates a new OnInitPostRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnInitPostRequestMessage(order OnInitPostRequestMessageOrder) *OnInitPostRequestMessage {
	this := OnInitPostRequestMessage{}
	this.Order = order
	return &this
}

// NewOnInitPostRequestMessageWithDefaults instantiates a new OnInitPostRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnInitPostRequestMessageWithDefaults() *OnInitPostRequestMessage {
	this := OnInitPostRequestMessage{}
	return &this
}

// GetOrder returns the Order field value
func (o *OnInitPostRequestMessage) GetOrder() OnInitPostRequestMessageOrder {
	if o == nil {
		var ret OnInitPostRequestMessageOrder
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *OnInitPostRequestMessage) GetOrderOk() (*OnInitPostRequestMessageOrder, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *OnInitPostRequestMessage) SetOrder(v OnInitPostRequestMessageOrder) {
	o.Order = v
}

func (o OnInitPostRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullableOnInitPostRequestMessage struct {
	value *OnInitPostRequestMessage
	isSet bool
}

func (v NullableOnInitPostRequestMessage) Get() *OnInitPostRequestMessage {
	return v.value
}

func (v *NullableOnInitPostRequestMessage) Set(val *OnInitPostRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableOnInitPostRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableOnInitPostRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnInitPostRequestMessage(val *OnInitPostRequestMessage) *NullableOnInitPostRequestMessage {
	return &NullableOnInitPostRequestMessage{value: val, isSet: true}
}

func (v NullableOnInitPostRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnInitPostRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


